!function(){"use strict";document.querySelector(".popup_type_preview");class e{constructor(e,t){var s,i;i=()=>{this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e),this.toggleButtonState()}))}))},(s="_setEventListeners")in this?Object.defineProperty(this,s,{value:i,enumerable:!0,configurable:!0,writable:!0}):this[s]=i,this.settings=e,this.form=t,this.inputList=[...this.form.querySelectorAll(e.inputSelector)],this.button=this.form.querySelector(e.submitButtonSelector),this.isFormValid=!0}resetValidation(){this.isFormValid=!0,this.inputList.forEach((e=>{this._hideError(e),e.classList.remove(this.settings.inputErrorClass)}))}enableValidation(){this.form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this.form)}_showError(e){this.isFormValid||(this.form.querySelector("#".concat(e.id,"-error")).textContent=e.validationMessage)}_hideError(e){this.isFormValid||(this.form.querySelector("#".concat(e.id,"-error")).textContent=" ")}_checkValidity(e){const{inputErrorClass:t}=this.settings;e.validity.valid?(e.classList.remove(t),this._hideError(e)):(e.classList.add(t),this._showError(e))}_checkValidity(e){const{inputErrorClass:t}=this.settings;e.validity.valid?(e.classList.remove(t),this._hideError(e)):(e.classList.add(t),this._showError(e))}toggleButtonState(){const{inactiveButtonClass:e}=this.settings;this.isFormValid=this.inputList.every((e=>e.validity.valid)),this.isFormValid?(this.button.disabled=!1,this.button.classList.remove(e)):(this.button.disabled=!0,this.button.classList.add(e))}}class t{constructor(e,t,s,i,n,o,r){this._name=e.name,this._data=e,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._userId=r,this._id=e._id,this._templateSelector=t,this._elementTemplate=this._templateSelector.content.querySelector(".elements__block"),this._handleCardClick=s,this._handleDelete=i,this._handleLike=n,this._deleteLike=o}removeCard(){this._element.remove()}updateLikes(e){this._likes=e,this._renderLikes()}_isLiked(){return this._likes.some((e=>e._id===this._userId))}_renderLikes(){this._isLiked()?this._element.querySelector(".elements__like").classList.add("elements__like_type_active"):this._element.querySelector(".elements__like").classList.remove("elements__like_type_active"),this._element.querySelector(".elements__like-counter").textContent=this._likes.length}createCardElement(){return this._element=this._elementTemplate.cloneNode(!0),this._element.querySelector(".elements__title").textContent=this._name,this._element.querySelector(".elements__cover").style.backgroundImage="url(".concat(this._link,")"),this._ownerId!==this._userId&&(this._element.querySelector(".elements__trash").style.display="none"),this._element.querySelector(".elements__trash").addEventListener("click",(()=>{this._handleDelete(this._id)})),this._element.querySelector(".elements__like-counter").textContent=this._likes.length,this._element.querySelector(".elements__like").addEventListener("click",(()=>{this._isLiked()?this._deleteLike(this._id):this._handleLike(this._id)})),this._renderLikes(),this._element.querySelector(".elements__cover").addEventListener("click",(()=>this._handleCardClick(this._name,this._link))),this._element}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_oppened"),document.addEventListener("keyup",this._handleEscClose)}close(){this._popupElement.classList.remove("popup_oppened"),document.removeEventListener("keyup",this._handleEscClose)}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target==e.currentTarget&&this.close()}))}}class i extends s{constructor(e,t,s,i){super(e),this._handleSubmit=i,this._form=this._popupElement.querySelector(".popup__form"),this._submitButton=this._popupElement.querySelector(".popup__save-button"),this._buttonText=t,this._loadingButtonText=s}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues())})),super.setEventListeners()}close(){super.close(),this._form.reset()}showLoading(){this._submitButton.textContent=this._loadingButtonText}hideLoading(){this._submitButton.textContent=this._buttonText}}const n=document.querySelector(".elements"),o=document.querySelector(".popup__input_type_name"),r=document.querySelector(".popup__input_type_description"),a=document.querySelector(".elements__template"),l=document.querySelector(".popup_type_profile-edditor"),h=document.querySelector(".popup_type_card-editor"),c=document.querySelector(".popup_type_change-profile-picture");let u="";const _={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_error"},d=new e(_,l),p=new e(_,h),m=new e(_,c);d.enableValidation(),p.enableValidation(),m.enableValidation();const v=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,description:this._userJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._userName.textContent=t,this._userJob.textContent=s}}({userNameSelector:".profile__info",userJobSelector:".profile__sub-info"}),g=new class extends s{constructor(e,t,s){super(e),this._form=this._popupElement.querySelector(".popup__form"),this._submitButton=this._popupElement.querySelector(".popup__save-button"),this._buttonText=t,this._loadingButtonText=s}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit()})),super.setEventListeners()}setHandleSubmit(e){this._handleSubmit=e}showLoading(){this._submitButton.textContent=this._loadingButtonText,console.log(this._loadingButtonText)}hideLoading(){this._submitButton.textContent=this._buttonText}}(".popup_type_delete-card","yes","saving...");function y(e){const s=new t(e,a,((e,t)=>{b.open(e,t)}),(e=>{g.setHandleSubmit((()=>{g.showLoading(),f.deleteCard(e).then((e=>{s.removeCard(e),g.close()})).catch((e=>{console.log("we have a problem",e)})).finally((()=>g.hideLoading()))})),g.setEventListeners(),g.open()}),(e=>{f.addLike(e).then((e=>s.updateLikes(e.likes))).catch((e=>console.log("error in adding like",e)))}),(e=>{f.deleteLike(e).then((e=>s.updateLikes(e.likes))).catch((e=>console.log("error in removing  like",e)))}),u);return s.createCardElement()}const L=new class{constructor(e,t){this._renderer=e,this._container=t}addItem(e){this._container.prepend(e)}renderItems(e){e.forEach((e=>this.addItem(this._renderer(e))))}}((e=>y(e)),n),f=new class{constructor(e){this._url=e.baseUrl,this._token=e.token}_getResponseData(e){return e.ok?e.json():Promise.reject("Error: ".concat(e.status))}getInitialCards(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._token}}).then(this._getResponseData)}addNewCard(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify(e)}).then(this._getResponseData)}deleteCard(e){return fetch("".concat(this._url,"/cards/").concat(e," "),{method:"DELETE",headers:{authorization:this._token}}).then(this._getResponseData)}addLike(e){return fetch("".concat(this._url,"/cards/likes/").concat(e," "),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._getResponseData)}deleteLike(e){return fetch("".concat(this._url,"/cards/likes/").concat(e," "),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then(this._getResponseData)}getProfile(){return fetch("".concat(this._url,"/users/me"),{headers:{authorization:this._token}}).then(this._getResponseData)}setProfile(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then(this._getResponseData)}changeAvatar(e){return fetch("".concat(this._url,"/users/me/avatar "),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify(e)}).then(this._getResponseData)}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",token:"3b0591f5-8d80-48af-bfb2-1499d5045304","Content-Type":"application/json"});f.getInitialCards().then((e=>{L.renderItems(e)})).catch((e=>{console.log("error",e)}));const k=document.querySelector(".profile__add-button"),E=new i(".popup_type_card-editor","Create","Creating...",(e=>{E.showLoading(),f.addNewCard(e).then((e=>{L.addItem(y(e)),E.close()})).catch((e=>console.log("there is error in adding card",e))).finally((()=>{p.toggleButtonState(),E.hideLoading()}))}));E.setEventListeners(),k.addEventListener("click",(()=>{d.resetValidation(),E.open()}));const b=new class extends s{constructor(e){super(e),this._popupPreview=".popup__preview"}open(e,t){this._popupElement.querySelector(this._popupPreview).src=t,this._popupElement.querySelector(".popup__preview-text").textContent=e,this._popupElement.querySelector(this._popupPreview).alt=e,super.open()}}(".popup_type_preview");b.setEventListeners(),f.getProfile().then((e=>{v.setUserInfo({name:e.name,about:e.about}),S.src=e.avatar,u=e._id})).catch((e=>{console.log("error in getting profile info",e)}));const S=document.getElementById("profile-avatar"),C=document.querySelector(".profile__edit-button"),q=new i(".popup_type_profile-edditor","save","saving...",(e=>{q.showLoading(),f.setProfile(e).then((e=>{v.setUserInfo(e),q.close()})).catch((e=>console.log("error in setting profile info",e))).finally((()=>{q.hideLoading()}))}));q.setEventListeners(),C.addEventListener("click",(()=>{d.resetValidation(),q.open();const e=v.getUserInfo();o.value=e.name,r.value=e.description}));const w=document.querySelector(".profile__avatar-middle"),x=new i(".popup_type_change-profile-picture","save","saving...",(e=>{x.showLoading(),f.changeAvatar(e).then((e=>{S.src=e.avatar,x.close()})).catch((e=>console.log("houston we have a problem",e))).finally((()=>{x.hideLoading(),m.toggleButtonState()}))}));x.setEventListeners(),w.addEventListener("click",(()=>{m.resetValidation(),x.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,