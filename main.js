!function(){"use strict";document.querySelector(".popup_type_preview");class e{constructor(e,t){var s,n;n=()=>{this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e),this.toggleButtonState()}))}))},(s="_setEventListeners")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this.settings=e,this.form=t,this.inputList=[...this.form.querySelectorAll(e.inputSelector)],this.button=this.form.querySelector(e.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideError(e),e.classList.remove(this.settings.inputErrorClass)}))}enableValidation(){this.form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this.form)}_showError(e){this.form.querySelector("#".concat(e.id,"-error")).textContent=e.validationMessage}_hideError(e){this.form.querySelector("#".concat(e.id,"-error")).textContent=" "}_checkValidity(e){const{inputErrorClass:t}=this.settings;e.validity.valid?(e.classList.remove(t),this._hideError(e)):(e.classList.add(t),this._showError(e))}_checkValidity(e){const{inputErrorClass:t}=this.settings;e.validity.valid?(e.classList.remove(t),this._hideError(e)):(e.classList.add(t),this._showError(e))}toggleButtonState(){const{inactiveButtonClass:e}=this.settings;this.inputList.every((e=>e.validity.valid))?(this.button.disabled=!1,this.button.classList.remove(e)):(this.button.disabled=!0,this.button.classList.add(e))}}document.querySelector(".popup_type_preview");class t{constructor(e,t,s){this._name=e.name,this._link=e.link,this._templateSelector=t,this._elementTemplate=this._templateSelector.content.querySelector(".elements__block"),this._handleCardClick=s}createCardElement(){return this._element=this._elementTemplate.cloneNode(!0),this._element.querySelector(".elements__title").textContent=this._name,this._element.querySelector(".elements__cover").style.backgroundImage="url(".concat(this._link,")"),this._element.querySelector(".elements__trash").addEventListener("click",(()=>{this._element.remove()})),this._element.querySelector(".elements__like").addEventListener("click",(e=>{e.target.classList.toggle("elements__like_type_active")})),this._element.querySelector(".elements__cover").addEventListener("click",(()=>this._handleCardClick(this._name,this._link))),this._element}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_oppened"),document.addEventListener("keyup",this._handleEscClose.bind(this))}close(){this._popupElement.classList.remove("popup_oppened"),document.removeEventListener("keyup",this._handleEscClose.bind(this))}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target==e.currentTarget&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popupElement.querySelector(".popup__form")}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this.close()})),super.setEventListeners()}close(){super.close(),this._form.reset()}}document.getElementById("profile-avatar").src="c15cb08ab8ecfaba54c6.jpg";const o=document.querySelector(".elements"),r=document.querySelector(".popup__input_type_name"),i=document.querySelector(".popup__input_type_description"),l=document.querySelector(".popup__input_type_title"),p=document.querySelector(".popup__input_type_link"),c=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,description:this._userJob.textContent}}setUserInfo(e){let{name:t,aboutMe:s}=e;this._userName.textContent=t,this._userJob.textContent=s}}({userNameSelector:".profile__info",userJobSelector:".profile__sub-info"}),a={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_error"},u=document.querySelector(".popup_type_profile-edditor"),_=document.querySelector(".popup_type_card-editor"),d=new e(a,u),h=new e(a,_);d.enableValidation(),h.enableValidation();const m=document.querySelector(".profile__edit-button"),y=new n(".popup_type_profile-edditor",(e=>{c.setUserInfo(e)}));y.setEventListeners(),m.addEventListener("click",(()=>{d.resetValidation(),y.open();const e=c.getUserInfo();r.value=e.name,i.value=e.description}));const v=document.querySelector(".profile__add-button"),E=new n(".popup_type_card-editor",(()=>{const e=L({name:l.value,link:p.value});f.addItem(e)}));E.setEventListeners(),v.addEventListener("click",(()=>{d.resetValidation(),E.open()}));const b=new class extends s{constructor(e){super(e),this._popupPreview=".popup__preview"}open(e,t){this._popupElement.querySelector(this._popupPreview).src=t,this._popupElement.querySelector(".popup__preview-text").textContent=e,this._popupElement.querySelector(this._popupPreview).alt=e,super.open()}}(".popup_type_preview");b.setEventListeners();const S=document.querySelector(".elements__template"),L=e=>new t(e,S,((e,t)=>{b.open(e,t)})).createCardElement(),f=new class{constructor(e,t){let{items:s,renderer:n}=e;this._items=s,this._renderer=n,this._container=t}addItem(e){this._container.prepend(e)}render(){this._items.forEach((e=>{this._renderer(e)}))}}({items:[{name:"Yosemite Valley",link:"https://code.s3.yandex.net/web-code/yosemite.jpg"},{name:"Lake Louise",link:"https://code.s3.yandex.net/web-code/lake-louise.jpg"},{name:"Bald Mountains",link:"https://code.s3.yandex.net/web-code/bald-mountains.jpg"},{name:"Latemar",link:"https://code.s3.yandex.net/web-code/latemar.jpg"},{name:"Vanoise National Park",link:"https://code.s3.yandex.net/web-code/vanoise.jpg"},{name:"Lago di Braies",link:"https://code.s3.yandex.net/web-code/lago.jpg"}],renderer:e=>{(e=>{const t=L(e);o.prepend(t)})(e)}},o);f.render()}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,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SWxILEtBQUs2RyxPQUFPM0csU0FBUTZCLElBQ2hCL0IsS0FBSzhHLFVBQVUvRSxRSDBFQyxDQUFDNEUsTUl0RkUsQ0FDM0IsQ0FDSXhFLEtBQU0sa0JBQ05FLEtBQU0sb0RBRVYsQ0FDSUYsS0FBTSxjQUNORSxLQUFNLHVEQUVWLENBQ0lGLEtBQU0saUJBQ05FLEtBQU0sMERBRVYsQ0FDSUYsS0FBTSxVQUNORSxLQUFNLG1EQUVWLENBQ0lGLEtBQU0sd0JBQ05FLEtBQU0sbURBRVYsQ0FDSUYsS0FBTSxpQkFDTkUsS0FBTSxpREorRHVDdUUsU0FBVzdFLElBVDVDMEUsQ0FBQUEsSUFDbkIsTUFBTWYsRUFBT08sRUFBYVEsR0FDekIvQixFQUFjdUMsUUFBUXZCLElBUXJCeUIsQ0FBV3BGLEtBQVMyQyxHQUN2QndCLEVBQVFnQixTIiwic291cmNlcyI6WyJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL2Zvcm1WYWxpZGF0b3IuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL2NhcmQuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL3BvcHVwLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Qb3B1cFdpdGhGb3JtIC5qcyIsIndlYnBhY2s6Ly93ZWJfcHJvamVjdF80Ly4vc3JjL3BhZ2VzL2luZGV4LmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9Vc2VySW5mbyAuanMiLCJ3ZWJwYWNrOi8vd2ViX3Byb2plY3RfNC8uL3NyYy9jb21wb25lbnRzL1BvcHVwV2l0aEltYWdlLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvY29tcG9uZW50cy9zZWN0aW9uLmpzIiwid2VicGFjazovL3dlYl9wcm9qZWN0XzQvLi9zcmMvdXRpbHMvaW5pdGlhbEVsZW1lbnRzLmpzIl0sInNvdXJjZXNDb250ZW50IjpbImNvbnN0IHBvcFVwUHJldmlldyA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9wcmV2aWV3XCIpO1xuZXhwb3J0IGRlZmF1bHQgY2xhc3MgRm9ybVZhbGlkYXRvciB7XG4gIGNvbnN0cnVjdG9yKHNldHRpbmdzLCBmb3JtKSB7XG4gICAgdGhpcy5zZXR0aW5ncyA9IHNldHRpbmdzO1xuICAgIHRoaXMuZm9ybSA9IGZvcm07XG4gICAgdGhpcy5pbnB1dExpc3QgPSBbLi4udGhpcy5mb3JtLnF1ZXJ5U2VsZWN0b3JBbGwoc2V0dGluZ3MuaW5wdXRTZWxlY3RvcildO1xuICAgIHRoaXMuYnV0dG9uID0gdGhpcy5mb3JtLnF1ZXJ5U2VsZWN0b3Ioc2V0dGluZ3Muc3VibWl0QnV0dG9uU2VsZWN0b3IpO1xuICB9XG4gIHJlc2V0VmFsaWRhdGlvbigpIHtcbiAgICB0aGlzLmlucHV0TGlzdC5mb3JFYWNoKChpbnB1dCkgPT4ge1xuICAgICAgdGhpcy5faGlkZUVycm9yKGlucHV0KTtcbiAgICAgIGlucHV0LmNsYXNzTGlzdC5yZW1vdmUodGhpcy5zZXR0aW5ncy5pbnB1dEVycm9yQ2xhc3MpO1xuICAgIH0pO1xuICB9XG4gIGVuYWJsZVZhbGlkYXRpb24oKSB7XG4gICAgdGhpcy5mb3JtLmFkZEV2ZW50TGlzdGVuZXIoXCJzdWJtaXRcIiwgKGUpID0+IHtcbiAgICAgIGUucHJldmVudERlZmF1bHQoKTtcbiAgICB9KTtcbiAgICB0aGlzLl9zZXRFdmVudExpc3RlbmVycyh0aGlzLmZvcm0pO1xuICB9XG4gIF9zaG93RXJyb3IoaW5wdXQpIHtcbiAgICBjb25zdCBlcnJvckVsZW1lbnQgPSB0aGlzLmZvcm0ucXVlcnlTZWxlY3RvcihgIyR7aW5wdXQuaWR9LWVycm9yYCk7XG4gICAgZXJyb3JFbGVtZW50LnRleHRDb250ZW50ID0gaW5wdXQudmFsaWRhdGlvbk1lc3NhZ2U7XG4gIH1cbiAgX2hpZGVFcnJvcihpbnB1dCkge1xuICAgIGNvbnN0IGVycm9yRWxlbWVudCA9IHRoaXMuZm9ybS5xdWVyeVNlbGVjdG9yKGAjJHtpbnB1dC5pZH0tZXJyb3JgKTtcbiAgICBlcnJvckVsZW1lbnQudGV4dENvbnRlbnQgPSBcIiBcIjtcbiAgfVxuICBfY2hlY2tWYWxpZGl0eShpbnB1dCkge1xuICAgIGNvbnN0IHsgaW5wdXRFcnJvckNsYXNzIH0gPSB0aGlzLnNldHRpbmdzO1xuICAgIGlmIChpbnB1dC52YWxpZGl0eS52YWxpZCkge1xuICAgICAgaW5wdXQuY2xhc3NMaXN0LnJlbW92ZShpbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgdGhpcy5faGlkZUVycm9yKGlucHV0KTtcbiAgICB9IGVsc2Uge1xuICAgICAgaW5wdXQuY2xhc3NMaXN0LmFkZChpbnB1dEVycm9yQ2xhc3MpO1xuICAgICAgdGhpcy5fc2hvd0Vycm9yKGlucHV0KTtcbiAgICB9XG4gIH1cbiAgX3NldEV2ZW50TGlzdGVuZXJzID0gKCkgPT4ge1xuICAgIHRoaXMuaW5wdXRMaXN0LmZvckVhY2goKGlucHV0KSA9PiB7XG4gICAgICBpbnB1dC5hZGRFdmVudExpc3RlbmVyKFwiaW5wdXRcIiwgKCkgPT4ge1xuICAgICAgICB0aGlzLl9jaGVja1ZhbGlkaXR5KGlucHV0KTtcbiAgICAgICAgdGhpcy50b2dnbGVCdXR0b25TdGF0ZSgpO1xuICAgICAgfSk7XG4gICAgfSk7XG4gIH07XG4gIF9jaGVja1ZhbGlkaXR5KGlucHV0KSB7XG4gICAgY29uc3QgeyBpbnB1dEVycm9yQ2xhc3MgfSA9IHRoaXMuc2V0dGluZ3M7XG4gICAgaWYgKGlucHV0LnZhbGlkaXR5LnZhbGlkKSB7XG4gICAgICBpbnB1dC5jbGFzc0xpc3QucmVtb3ZlKGlucHV0RXJyb3JDbGFzcyk7XG4gICAgICB0aGlzLl9oaWRlRXJyb3IoaW5wdXQpO1xuICAgIH0gZWxzZSB7XG4gICAgICBpbnB1dC5jbGFzc0xpc3QuYWRkKGlucHV0RXJyb3JDbGFzcyk7XG4gICAgICB0aGlzLl9zaG93RXJyb3IoaW5wdXQpO1xuICAgIH1cbiAgfVxuICB0b2dnbGVCdXR0b25TdGF0ZSgpIHtcbiAgICBjb25zdCB7IGluYWN0aXZlQnV0dG9uQ2xhc3MgfSA9IHRoaXMuc2V0dGluZ3M7XG4gICAgY29uc3QgaXNGb3JtVmFsaWQgPSB0aGlzLmlucHV0TGlzdC5ldmVyeSgoaW5wdXQpID0+IGlucHV0LnZhbGlkaXR5LnZhbGlkKTtcbiAgICBpZiAoaXNGb3JtVmFsaWQpIHtcbiAgICAgIHRoaXMuYnV0dG9uLmRpc2FibGVkID0gZmFsc2U7XG4gICAgICB0aGlzLmJ1dHRvbi5jbGFzc0xpc3QucmVtb3ZlKGluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH0gZWxzZSB7XG4gICAgICB0aGlzLmJ1dHRvbi5kaXNhYmxlZCA9IHRydWU7XG4gICAgICB0aGlzLmJ1dHRvbi5jbGFzc0xpc3QuYWRkKGluYWN0aXZlQnV0dG9uQ2xhc3MpO1xuICAgIH1cbiAgfVxufVxuIiwiXG5jb25zdCBwb3BVcFByZXZpZXcgPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX3R5cGVfcHJldmlld1wiKTtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgQ2FyZCB7XG4gIGNvbnN0cnVjdG9yKGRhdGEsIHRlbXBsYXRlU2VsZWN0b3IsIGhhbmRsZUNhcmRDbGljaykge1xuICAgIHRoaXMuX25hbWUgPSBkYXRhLm5hbWU7XG4gICAgdGhpcy5fbGluayA9IGRhdGEubGluaztcbiAgICB0aGlzLl90ZW1wbGF0ZVNlbGVjdG9yID0gdGVtcGxhdGVTZWxlY3RvcjtcbiAgICB0aGlzLl9lbGVtZW50VGVtcGxhdGUgPVxuICAgIHRoaXMuX3RlbXBsYXRlU2VsZWN0b3IuY29udGVudC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19ibG9ja1wiKTtcbiAgICB0aGlzLl9oYW5kbGVDYXJkQ2xpY2sgPSBoYW5kbGVDYXJkQ2xpY2s7XG4gIH1cblxuICBjcmVhdGVDYXJkRWxlbWVudCgpIHtcbiAgICB0aGlzLl9lbGVtZW50ID0gdGhpcy5fZWxlbWVudFRlbXBsYXRlLmNsb25lTm9kZSh0cnVlKTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX3RpdGxlXCIpLnRleHRDb250ZW50ID0gdGhpcy5fbmFtZTtcbiAgICB0aGlzLl9lbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXG4gICAgICBcIi5lbGVtZW50c19fY292ZXJcIlxuICAgICkuc3R5bGUuYmFja2dyb3VuZEltYWdlID0gYHVybCgke3RoaXMuX2xpbmt9KWA7XG5cbiAgICAvL3JlbW92ZSBlbGVtZW50XG4gICAgdGhpcy5fZWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIuZWxlbWVudHNfX3RyYXNoXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsICgpID0+IHtcbiAgICAgICAgdGhpcy5fZWxlbWVudC5yZW1vdmUoKTtcbiAgICAgIH0pO1xuXG4gICAgLy9saWtlIGJ0blxuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19saWtlXCIpXG4gICAgICAuYWRkRXZlbnRMaXN0ZW5lcihcImNsaWNrXCIsIChldmVudCkgPT4ge1xuICAgICAgICBldmVudC50YXJnZXQuY2xhc3NMaXN0LnRvZ2dsZShcImVsZW1lbnRzX19saWtlX3R5cGVfYWN0aXZlXCIpO1xuICAgICAgfSk7XG5cbiAgICAvL29wbmUgcHJldmlld1xuICAgIHRoaXMuX2VsZW1lbnRcbiAgICAgIC5xdWVyeVNlbGVjdG9yKFwiLmVsZW1lbnRzX19jb3ZlclwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB0aGlzLl9oYW5kbGVDYXJkQ2xpY2soIHRoaXMuX25hbWUsIHRoaXMuX2xpbmspXG4gICAgICAgIC8vb3BlblBvcFVwKHBvcFVwUHJldmlldyk7XG4gICAgICAgIC8vcG9wVXBQcmV2aWV3LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3ByZXZpZXctdGV4dFwiKS50ZXh0Q29udGVudCA9XG4gICAgICAgICAgLy90aGlzLl9uYW1lO1xuICAgICAgICAvL3BvcFVwUHJldmlldy5xdWVyeVNlbGVjdG9yKFwiLnBvcHVwX19wcmV2aWV3XCIpLmFsdCA9IHRoaXMuX25hbWU7XG4gICAgICAgIC8vcG9wVXBQcmV2aWV3LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX3ByZXZpZXdcIikuc3JjID0gdGhpcy5fbGluaztcbiAgICAgICk7XG4gICAgcmV0dXJuIHRoaXMuX2VsZW1lbnQ7XG4gIH1cbn1cbiIsImV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwIHtcbiAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IocG9wdXBTZWxlY3Rvcik7XG4gICAgdGhpcy5faGFuZGxlRXNjQ2xvc2UgPSB0aGlzLl9oYW5kbGVFc2NDbG9zZS5iaW5kKHRoaXMpO1xuICAgIC8vdGhpcy5faGFuZGxlRW1wdHlDbGljayA9IHRoaXMuX2hhbmRsZUVtcHR5Q2xpY2suYmluZCh0aGlzKTtcbiAgfVxuICBfaGFuZGxlRXNjQ2xvc2UoZXZ0KSB7XG4gICAgaWYgKGV2dC5rZXkgPT09IFwiRXNjYXBlXCIpIHtcbiAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICB9XG4gIH1cblxuICBvcGVuKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5jbGFzc0xpc3QuYWRkKFwicG9wdXBfb3BwZW5lZFwiKTtcbiAgICBkb2N1bWVudC5hZGRFdmVudExpc3RlbmVyKFwia2V5dXBcIiwgdGhpcy5faGFuZGxlRXNjQ2xvc2UuYmluZCh0aGlzKSk7XG4gIH1cbiAgY2xvc2UoKSB7XG4gICAgdGhpcy5fcG9wdXBFbGVtZW50LmNsYXNzTGlzdC5yZW1vdmUoXCJwb3B1cF9vcHBlbmVkXCIpO1xuXG4gICAgZG9jdW1lbnQucmVtb3ZlRXZlbnRMaXN0ZW5lcihcImtleXVwXCIsIHRoaXMuX2hhbmRsZUVzY0Nsb3NlLmJpbmQodGhpcykpO1xuICB9XG4gIHNldEV2ZW50TGlzdGVuZXJzKCkge1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudFxuICAgICAgLnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Nsb3NlLWJ1dHRvblwiKVxuICAgICAgLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH0pO1xuICAgIHRoaXMuX3BvcHVwRWxlbWVudC5hZGRFdmVudExpc3RlbmVyKFwibW91c2Vkb3duXCIsIChlKSA9PiB7XG4gICAgICBpZiAoZS50YXJnZXQgPT0gZS5jdXJyZW50VGFyZ2V0KSB7XG4gICAgICAgIHRoaXMuY2xvc2UoKTtcbiAgICAgIH1cbiAgICB9KTtcbiAgfVxufVxuIiwiaW1wb3J0IFBvcHVwIGZyb20gXCIuL3BvcHVwLmpzXCI7XG5cbmV4cG9ydCBkZWZhdWx0IGNsYXNzIFBvcHVwV2l0aEZvcm0gZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvciwgc3VibWl0SGFuZGxlcikge1xuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKVxuICAgICAgICB0aGlzLl9oYW5kbGVTdWJtaXQgID0gc3VibWl0SGFuZGxlclxuICAgICAgICB0aGlzLl9mb3JtID0gdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfX2Zvcm1cIilcbiAgICAgICBcbiAgICB9XG4gICAgX2dldElucHV0VmFsdWVzKCkge1xuICAgICAgICBjb25zdCBpbnB1dHMgPSBbLi4udGhpcy5fZm9ybS5xdWVyeVNlbGVjdG9yQWxsKFwiLnBvcHVwX19pbnB1dFwiKV1cbiAgICAgICAgXG4gICAgICAgIGNvbnN0IGlucHV0VmFsdWVzID0ge31cbiAgICAgICAgaW5wdXRzLmZvckVhY2goKGlucHV0KSA9PiB7IGlucHV0VmFsdWVzW2lucHV0Lm5hbWVdID0gaW5wdXQudmFsdWUgfSlcbiAgICAgICAgcmV0dXJuIGlucHV0VmFsdWVzXG4gICAgICAgIFxuICAgIH1cbiAgXG4gICAgc2V0RXZlbnRMaXN0ZW5lcnMoKSB7XG4gICAgICAgIHRoaXMuX2Zvcm0uYWRkRXZlbnRMaXN0ZW5lcihcInN1Ym1pdFwiLCAoZSkgPT57XG4gICAgICAgICAgICBlLnByZXZlbnREZWZhdWx0KClcbiAgICAgICAgICAgIHRoaXMuX2hhbmRsZVN1Ym1pdCAodGhpcy5fZ2V0SW5wdXRWYWx1ZXMoKSlcbiAgICAgICAgICAgIHRoaXMuY2xvc2UoKVxuICAgICAgICB9KVxuICAgICAgICBzdXBlci5zZXRFdmVudExpc3RlbmVycygpXG4gICAgfVxuICAgIGNsb3NlKCkge1xuICAgICAgICBzdXBlci5jbG9zZSgpXG4gICAgICAgIHRoaXMuX2Zvcm0ucmVzZXQoKVxuICAgIH1cbn0iLCJpbXBvcnQgYXZhdGFyU3JjIGZyb20gXCIuLi9pbWFnZXMvcHJvZmlsZS5qcGdcIjtcbmltcG9ydCBcIi4vaW5kZXguY3NzXCI7XG5pbXBvcnQgeyBpbml0aWFsRWxlbWVudHMgfSBmcm9tIFwiLi4vdXRpbHMvaW5pdGlhbEVsZW1lbnRzLmpzXCI7XG5pbXBvcnQgRm9ybVZhbGlkYXRvciBmcm9tIFwiLi4vY29tcG9uZW50cy9mb3JtVmFsaWRhdG9yLmpzXCI7XG5pbXBvcnQgQ2FyZCBmcm9tIFwiLi4vY29tcG9uZW50cy9jYXJkLmpzXCI7XG5pbXBvcnQgUG9wdXBXaXRoSW1hZ2UgZnJvbSBcIi4uL2NvbXBvbmVudHMvUG9wdXBXaXRoSW1hZ2UuanNcIjtcbmltcG9ydCBQb3B1cFdpdGhGb3JtIGZyb20gXCIuLi9jb21wb25lbnRzL1BvcHVwV2l0aEZvcm0gLmpzXCI7XG5pbXBvcnQgVXNlckluZm8gZnJvbSBcIi4uL2NvbXBvbmVudHMvVXNlckluZm8gLmpzXCI7XG5pbXBvcnQgU2VjdGlvbiBmcm9tIFwiLi4vY29tcG9uZW50cy9zZWN0aW9uLmpzXCI7XG4vLy4uLi4uLi4uLi4uLi4uLkVuZCBPZiBJbXBvcnQgTW9kdWxzLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG5jb25zdCBhdmF0YXJpbWcgPSBkb2N1bWVudC5nZXRFbGVtZW50QnlJZChcInByb2ZpbGUtYXZhdGFyXCIpO1xuYXZhdGFyaW1nLnNyYyA9IGF2YXRhclNyY1xuLy8uLi4uLi4uLi4uLi4uLi4uLi5lbmQgb2Ygc3JjIGxpc3QuLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG5jb25zdCBlbGVtZW50c1BsYWNlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c1wiKTtcbmNvbnN0IG5hbWVDaGFuZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9uYW1lXCIpO1xuY29uc3QgZGVzY3JpcHRpb25DaGFuZ2VyID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9kZXNjcmlwdGlvblwiKTtcbmNvbnN0IGNhcmROYW1lID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV90aXRsZVwiKTtcbmNvbnN0IGNhcmRMaW5rID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9faW5wdXRfdHlwZV9saW5rXCIpO1xuLy8uLi4uLi4uLi4uLi4uLi4uLi5FbmQgb2YgdmFyaWFibGVzLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG5jb25zdCB1c2VySW5mbyA9IG5ldyBVc2VySW5mbyh7XG4gIHVzZXJOYW1lU2VsZWN0b3I6IFwiLnByb2ZpbGVfX2luZm9cIiwgXG4gIHVzZXJKb2JTZWxlY3RvcjogXCIucHJvZmlsZV9fc3ViLWluZm9cIiB9KVxuICAvLy4uLi4uLi4uLi4uLi4uLi4uLi4uLi5FbmQgb2YgdXNlciBJbmZvLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi5cbmNvbnN0IHNldHRpbmdzID0ge1xuICBmb3JtU2VsZWN0b3I6IFwiLnBvcHVwX19mb3JtXCIsXG4gIGlucHV0U2VsZWN0b3I6IFwiLnBvcHVwX19pbnB1dFwiLFxuICBzdWJtaXRCdXR0b25TZWxlY3RvcjogXCIucG9wdXBfX3NhdmUtYnV0dG9uXCIsXG4gIGluYWN0aXZlQnV0dG9uQ2xhc3M6IFwicG9wdXBfX3NhdmUtYnV0dG9uX2Rpc2FibGVkXCIsXG4gIGlucHV0RXJyb3JDbGFzczogXCJwb3B1cF9faW5wdXRfZXJyb3JcIixcbn07XG4vLy4uLi4uLi4uLi4uLi4uRW5kIE9mIHNldHRpbmdzLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG5jb25zdCBwcm9maWxlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF90eXBlX3Byb2ZpbGUtZWRkaXRvclwiKVxuY29uc3QgY2FyZCA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucG9wdXBfdHlwZV9jYXJkLWVkaXRvclwiKVxuY29uc3QgZWRpdEZvcm1WYWxpZGF0b3IgPSBuZXcgRm9ybVZhbGlkYXRvcihzZXR0aW5ncywgcHJvZmlsZSk7XG5jb25zdCBhZGRDYXJkRm9ybVZhbGlkYXRvciA9IG5ldyBGb3JtVmFsaWRhdG9yKHNldHRpbmdzLCBjYXJkKTtcbmVkaXRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbmFkZENhcmRGb3JtVmFsaWRhdG9yLmVuYWJsZVZhbGlkYXRpb24oKTtcbi8vLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uRW5kIG9mIGZvcm0gVmFsaWRhdG9yLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLlxuXG5cbi8vcHJvZmlsZSBwb3B1cFxuY29uc3Qgb3BlblByb2ZpbGVFZGl0b3JCdXR0b24gPSBkb2N1bWVudC5xdWVyeVNlbGVjdG9yKFwiLnByb2ZpbGVfX2VkaXQtYnV0dG9uXCIpO1xuY29uc3QgcHJvZmlsZUZvcm0gPSBuZXcgUG9wdXBXaXRoRm9ybShcIi5wb3B1cF90eXBlX3Byb2ZpbGUtZWRkaXRvclwiLCAoZGF0YSkgPT4ge1xuICB1c2VySW5mby5zZXRVc2VySW5mbyhkYXRhKVxufSlcbnByb2ZpbGVGb3JtLnNldEV2ZW50TGlzdGVuZXJzKClcbm9wZW5Qcm9maWxlRWRpdG9yQnV0dG9uLmFkZEV2ZW50TGlzdGVuZXIoXCJjbGlja1wiLCAoKSA9PiB7XG4gIFxuICBlZGl0Rm9ybVZhbGlkYXRvci5yZXNldFZhbGlkYXRpb24oKTtcbiAgcHJvZmlsZUZvcm0ub3BlbigpO1xuICBjb25zdCBkYXRhID0gdXNlckluZm8uZ2V0VXNlckluZm8oKVxuICBuYW1lQ2hhbmdlci52YWx1ZSA9IGRhdGEubmFtZVxuICBkZXNjcmlwdGlvbkNoYW5nZXIudmFsdWUgPSBkYXRhLmRlc2NyaXB0aW9uXG59KTtcbi8vLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLmVuZCBvZiBwcm9maWxlIHBvcHVwLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLlxuXG4vL2FkZCBuZXcgQ2FyZCBwb3BVcFxuY29uc3QgYWRkQ2FyZEJ1dHRvbiA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IoXCIucHJvZmlsZV9fYWRkLWJ1dHRvblwiKTtcbmNvbnN0IGNhcmRGb3JtID0gbmV3IFBvcHVwV2l0aEZvcm0oXCIucG9wdXBfdHlwZV9jYXJkLWVkaXRvclwiLCAoKT0+e1xuICBjb25zdCBjYXJkID0gZ2VuZXJhdGVDYXJkKHtcbiAgbmFtZTogY2FyZE5hbWUudmFsdWUsXG4gIGxpbms6IGNhcmRMaW5rLnZhbHVlLFxufSk7IFxuc2VjdGlvbi5hZGRJdGVtKGNhcmQpXG59KVxuY2FyZEZvcm0uc2V0RXZlbnRMaXN0ZW5lcnMoKVxuYWRkQ2FyZEJ1dHRvbi5hZGRFdmVudExpc3RlbmVyKFwiY2xpY2tcIiwgKCk9PiB7XG4gIGVkaXRGb3JtVmFsaWRhdG9yLnJlc2V0VmFsaWRhdGlvbigpXG4gIGNhcmRGb3JtLm9wZW4oKVxufSlcblxuLy8gY2FyZCBwcmV2aWV3IHBvcHVwXG5jb25zdCBvcGVuUHJldmlldyA9IG5ldyBQb3B1cFdpdGhJbWFnZShcIi5wb3B1cF90eXBlX3ByZXZpZXdcIilcbm9wZW5QcmV2aWV3LnNldEV2ZW50TGlzdGVuZXJzKClcbi8vLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4gZW5kIG9mIHBvcHVwcy4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG5cbmNvbnN0IHRlbXBsYXRlID0gZG9jdW1lbnQucXVlcnlTZWxlY3RvcihcIi5lbGVtZW50c19fdGVtcGxhdGVcIik7XG5jb25zdCByZW5kZXJDYXJkID0gKGNhcmREYXRhKSA9PiB7XG4gY29uc3QgY2FyZCA9IGdlbmVyYXRlQ2FyZChjYXJkRGF0YSlcbiAgZWxlbWVudHNQbGFjZS5wcmVwZW5kKGNhcmQpO1xufTtcbmNvbnN0IGdlbmVyYXRlQ2FyZCA9IChjYXJkRGF0YSkgPT57XG4gIHJldHVybiBuZXcgQ2FyZChjYXJkRGF0YSwgdGVtcGxhdGUsICh0ZXh0LCBsaW5rKSA9PiB7b3BlblByZXZpZXcub3Blbih0ZXh0LCBsaW5rKVxuICB9KS5jcmVhdGVDYXJkRWxlbWVudCgpO1xufVxuXG5jb25zdCBzZWN0aW9uID0gbmV3IFNlY3Rpb24oe2l0ZW1zOiBpbml0aWFsRWxlbWVudHMsIHJlbmRlcmVyOiAoZGF0YSk9PiBcbiAge3JlbmRlckNhcmQoZGF0YSl9fSwgZWxlbWVudHNQbGFjZSlcbnNlY3Rpb24ucmVuZGVyKClcbi8vLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uZW5kIG9mIGNhcmRzIHJlbmRlcmluZy4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uLi4uXG5cblxuIiwiIGV4cG9ydCBkZWZhdWx0IGNsYXNzIFVzZXJJbmZvIHtcclxuICAgIGNvbnN0cnVjdG9yKHt1c2VyTmFtZVNlbGVjdG9yLCB1c2VySm9iU2VsZWN0b3J9KXtcclxuICAgICAgICB0aGlzLl91c2VyTmFtZSA9IGRvY3VtZW50LnF1ZXJ5U2VsZWN0b3IodXNlck5hbWVTZWxlY3RvcilcclxuICAgICAgICB0aGlzLl91c2VySm9iID0gZG9jdW1lbnQucXVlcnlTZWxlY3Rvcih1c2VySm9iU2VsZWN0b3IpXHJcbiAgICAgICBcclxuICAgIH1cclxuICAgIGdldFVzZXJJbmZvKCl7XHJcbiAgICAgICAgcmV0dXJuIHtcclxuICAgICAgICAgICBuYW1lOiB0aGlzLl91c2VyTmFtZS50ZXh0Q29udGVudCxcclxuICAgICAgICAgICBkZXNjcmlwdGlvbjogdGhpcy5fdXNlckpvYi50ZXh0Q29udGVudFxyXG4gICAgICAgIH1cclxuICAgIH1cclxuICAgIHNldFVzZXJJbmZvKHtuYW1lLCBhYm91dE1lfSl7XHJcbiAgICAgICAgdGhpcy5fdXNlck5hbWUudGV4dENvbnRlbnQgPSBuYW1lXHJcbiAgICAgICAgdGhpcy5fdXNlckpvYi50ZXh0Q29udGVudCA9IGFib3V0TWVcclxuXHJcbiAgICB9XHJcbn0iLCJpbXBvcnQgUG9wdXAgZnJvbSBcIi4vcG9wdXAuanNcIjtcblxuZXhwb3J0IGRlZmF1bHQgY2xhc3MgUG9wdXBXaXRoSW1hZ2UgZXh0ZW5kcyBQb3B1cCB7XG4gICAgY29uc3RydWN0b3IocG9wdXBTZWxlY3Rvcikge1xuICAgICAgICBzdXBlcihwb3B1cFNlbGVjdG9yKVxuICAgICAgICB0aGlzLl9wb3B1cFByZXZpZXcgPSBcIi5wb3B1cF9fcHJldmlld1wiXG4gICAgICAgIFxuICAgICAgICBcbiAgICAgICBcbiAgICB9XG4gICAgXG5cbiAgICBvcGVuKHRleHQsIGxpbmspIHtcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fcG9wdXBQcmV2aWV3KS5zcmMgPSBsaW5rO1xuICAgICAgICB0aGlzLl9wb3B1cEVsZW1lbnQucXVlcnlTZWxlY3RvcihcIi5wb3B1cF9fcHJldmlldy10ZXh0XCIpLnRleHRDb250ZW50ID0gdGV4dDtcbiAgICAgICAgdGhpcy5fcG9wdXBFbGVtZW50LnF1ZXJ5U2VsZWN0b3IodGhpcy5fcG9wdXBQcmV2aWV3KS5hbHQgPSB0ZXh0O1xuICAgICAgICBzdXBlci5vcGVuKClcbiAgICB9XG59IiwiZXhwb3J0IGRlZmF1bHQgY2xhc3MgU2VjdGlvbiB7XHJcbiAgICBjb25zdHJ1Y3Rvcih7aXRlbXMsIHJlbmRlcmVyfSwgY29udGFpbmVyU2VsZWN0b3Ipe1xyXG4gICAgICAgIHRoaXMuX2l0ZW1zID1pdGVtc1xyXG4gICAgICAgIHRoaXMuX3JlbmRlcmVyID1yZW5kZXJlclxyXG4gICAgICAgIHRoaXMuX2NvbnRhaW5lciA9IGNvbnRhaW5lclNlbGVjdG9yXHJcblxyXG4gICAgfVxyXG4gICAgYWRkSXRlbShlbGVtZW50KXtcclxuICAgICAgICB0aGlzLl9jb250YWluZXIucHJlcGVuZChlbGVtZW50KVxyXG4gICAgfVxyXG4gICAgcmVuZGVyKCl7XHJcbiAgICAgICAgdGhpcy5faXRlbXMuZm9yRWFjaChkYXRhID0+e1xyXG4gICAgICAgICAgICB0aGlzLl9yZW5kZXJlcihkYXRhKVxyXG4gICAgICAgIH0pXHJcbiAgICB9XHJcbiAgICAgICAgXHJcbiAgICB9IiwiZXhwb3J0IGNvbnN0IGluaXRpYWxFbGVtZW50cyA9IFtcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiWW9zZW1pdGUgVmFsbGV5XCIsXG4gICAgICAgIGxpbms6IFwiaHR0cHM6Ly9jb2RlLnMzLnlhbmRleC5uZXQvd2ViLWNvZGUveW9zZW1pdGUuanBnXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiTGFrZSBMb3Vpc2VcIixcbiAgICAgICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYWtlLWxvdWlzZS5qcGdcIixcbiAgICB9LFxuICAgIHtcbiAgICAgICAgbmFtZTogXCJCYWxkIE1vdW50YWluc1wiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL2JhbGQtbW91bnRhaW5zLmpwZ1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIkxhdGVtYXJcIixcbiAgICAgICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYXRlbWFyLmpwZ1wiLFxuICAgIH0sXG4gICAge1xuICAgICAgICBuYW1lOiBcIlZhbm9pc2UgTmF0aW9uYWwgUGFya1wiLFxuICAgICAgICBsaW5rOiBcImh0dHBzOi8vY29kZS5zMy55YW5kZXgubmV0L3dlYi1jb2RlL3Zhbm9pc2UuanBnXCIsXG4gICAgfSxcbiAgICB7XG4gICAgICAgIG5hbWU6IFwiTGFnbyBkaSBCcmFpZXNcIixcbiAgICAgICAgbGluazogXCJodHRwczovL2NvZGUuczMueWFuZGV4Lm5ldC93ZWItY29kZS9sYWdvLmpwZ1wiLFxuICAgIH0sXG5dO1xuXG4vLyBlbmQgb2YgY2FyZCBsaXN0KioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKioqKiJdLCJuYW1lcyI6WyJkb2N1bWVudCIsInF1ZXJ5U2VsZWN0b3IiLCJGb3JtVmFsaWRhdG9yIiwiY29uc3RydWN0b3IiLCJzZXR0aW5ncyIsImZvcm0iLCJ0aGlzIiwiaW5wdXRMaXN0IiwiZm9yRWFjaCIsImlucHV0IiwiYWRkRXZlbnRMaXN0ZW5lciIsIl9jaGVja1ZhbGlkaXR5IiwidG9nZ2xlQnV0dG9uU3RhdGUiLCJxdWVyeVNlbGVjdG9yQWxsIiwiaW5wdXRTZWxlY3RvciIsImJ1dHRvbiIsInN1Ym1pdEJ1dHRvblNlbGVjdG9yIiwicmVzZXRWYWxpZGF0aW9uIiwiX2hpZGVFcnJvciIsImNsYXNzTGlzdCIsInJlbW92ZSIsImlucHV0RXJyb3JDbGFzcyIsImVuYWJsZVZhbGlkYXRpb24iLCJlIiwicHJldmVudERlZmF1bHQiLCJfc2V0RXZlbnRMaXN0ZW5lcnMiLCJfc2hvd0Vycm9yIiwiaWQiLCJ0ZXh0Q29udGVudCIsInZhbGlkYXRpb25NZXNzYWdlIiwidmFsaWRpdHkiLCJ2YWxpZCIsImFkZCIsImluYWN0aXZlQnV0dG9uQ2xhc3MiLCJldmVyeSIsImRpc2FibGVkIiwiQ2FyZCIsImRhdGEiLCJ0ZW1wbGF0ZVNlbGVjdG9yIiwiaGFuZGxlQ2FyZENsaWNrIiwiX25hbWUiLCJuYW1lIiwiX2xpbmsiLCJsaW5rIiwiX3RlbXBsYXRlU2VsZWN0b3IiLCJfZWxlbWVudFRlbXBsYXRlIiwiY29udGVudCIsIl9oYW5kbGVDYXJkQ2xpY2siLCJjcmVhdGVDYXJkRWxlbWVudCIsIl9lbGVtZW50IiwiY2xvbmVOb2RlIiwic3R5bGUiLCJiYWNrZ3JvdW5kSW1hZ2UiLCJldmVudCIsInRhcmdldCIsInRvZ2dsZSIsIlBvcHVwIiwicG9wdXBTZWxlY3RvciIsIl9wb3B1cEVsZW1lbnQiLCJfaGFuZGxlRXNjQ2xvc2UiLCJiaW5kIiwiZXZ0Iiwia2V5IiwiY2xvc2UiLCJvcGVuIiwicmVtb3ZlRXZlbnRMaXN0ZW5lciIsInNldEV2ZW50TGlzdGVuZXJzIiwiY3VycmVudFRhcmdldCIsIlBvcHVwV2l0aEZvcm0iLCJzdWJtaXRIYW5kbGVyIiwic3VwZXIiLCJfaGFuZGxlU3VibWl0IiwiX2Zvcm0iLCJfZ2V0SW5wdXRWYWx1ZXMiLCJpbnB1dHMiLCJpbnB1dFZhbHVlcyIsInZhbHVlIiwicmVzZXQiLCJnZXRFbGVtZW50QnlJZCIsInNyYyIsImVsZW1lbnRzUGxhY2UiLCJuYW1lQ2hhbmdlciIsImRlc2NyaXB0aW9uQ2hhbmdlciIsImNhcmROYW1lIiwiY2FyZExpbmsiLCJ1c2VySW5mbyIsInVzZXJOYW1lU2VsZWN0b3IiLCJ1c2VySm9iU2VsZWN0b3IiLCJfdXNlck5hbWUiLCJfdXNlckpvYiIsImdldFVzZXJJbmZvIiwiZGVzY3JpcHRpb24iLCJzZXRVc2VySW5mbyIsImFib3V0TWUiLCJmb3JtU2VsZWN0b3IiLCJwcm9maWxlIiwiY2FyZCIsImVkaXRGb3JtVmFsaWRhdG9yIiwiYWRkQ2FyZEZvcm1WYWxpZGF0b3IiLCJvcGVuUHJvZmlsZUVkaXRvckJ1dHRvbiIsInByb2ZpbGVGb3JtIiwiYWRkQ2FyZEJ1dHRvbiIsImNhcmRGb3JtIiwiZ2VuZXJhdGVDYXJkIiwic2VjdGlvbiIsImFkZEl0ZW0iLCJvcGVuUHJldmlldyIsIl9wb3B1cFByZXZpZXciLCJ0ZXh0IiwiYWx0IiwidGVtcGxhdGUiLCJjYXJkRGF0YSIsImNvbnRhaW5lclNlbGVjdG9yIiwiaXRlbXMiLCJyZW5kZXJlciIsIl9pdGVtcyIsIl9yZW5kZXJlciIsIl9jb250YWluZXIiLCJlbGVtZW50IiwicHJlcGVuZCIsInJlbmRlciIsInJlbmRlckNhcmQiXSwic291cmNlUm9vdCI6IiJ9