!function(){"use strict";document.querySelector(".popup_type_preview");class e{constructor(e,t){var s,n;n=()=>{this.inputList.forEach((e=>{e.addEventListener("input",(()=>{this._checkValidity(e),this.toggleButtonState()}))}))},(s="_setEventListeners")in this?Object.defineProperty(this,s,{value:n,enumerable:!0,configurable:!0,writable:!0}):this[s]=n,this.settings=e,this.form=t,this.inputList=[...this.form.querySelectorAll(e.inputSelector)],this.button=this.form.querySelector(e.submitButtonSelector)}resetValidation(){this.inputList.forEach((e=>{this._hideError(e),e.classList.remove(this.settings.inputErrorClass)}))}enableValidation(){this.form.addEventListener("submit",(e=>{e.preventDefault()})),this._setEventListeners(this.form)}_showError(e){this.form.querySelector("#".concat(e.id,"-error")).textContent=e.validationMessage}_hideError(e){this.form.querySelector("#".concat(e.id,"-error")).textContent=" "}_checkValidity(e){const{inputErrorClass:t}=this.settings;e.validity.valid?(e.classList.remove(t),this._hideError(e)):(e.classList.add(t),this._showError(e))}_checkValidity(e){const{inputErrorClass:t}=this.settings;e.validity.valid?(e.classList.remove(t),this._hideError(e)):(e.classList.add(t),this._showError(e))}toggleButtonState(){const{inactiveButtonClass:e}=this.settings;this.inputList.every((e=>e.validity.valid))?(this.button.disabled=!1,this.button.classList.remove(e)):(this.button.disabled=!0,this.button.classList.add(e))}}class t{constructor(e,t,s,n,o,r,i){this._name=e.name,this._data=e,this._link=e.link,this._likes=e.likes,this._ownerId=e.owner._id,this._userId=i,this._id=e._id,this._templateSelector=t,this._elementTemplate=this._templateSelector.content.querySelector(".elements__block"),this._handleCardClick=s,this._handleDelete=n,this._handleLike=o,this._deleteLike=r}removecard(){this._element.remove()}createCardElement(){this._element=this._elementTemplate.cloneNode(!0),this._element.querySelector(".elements__title").textContent=this._name,this._element.querySelector(".elements__cover").style.backgroundImage="url(".concat(this._link,")"),this._ownerId!==this._userId&&(this._element.querySelector(".elements__trash").style.display="none"),this._element.querySelector(".elements__trash").addEventListener("click",(()=>{this._handleDelete(this._id)}));const e=this._element.querySelector(".elements__like-counter");return e.textContent=this._likes.length,this._element.querySelector(".elements__like").addEventListener("click",(t=>{t.target.classList.toggle("elements__like_type_active")?(console.log(this._userId,this._ownerId),this._handleLike(this._id),e.textContent=this._likes.length+1):(this._deleteLike(this._id),e.textContent=this._likes.length-1)})),this._likes.some((e=>e._id===this._userId))&&(console.log("something work"),this._element.querySelector(".elements__like").classList.add("elements__like_type_active")),this._element.querySelector(".elements__cover").addEventListener("click",(()=>this._handleCardClick(this._name,this._link))),this._element}}class s{constructor(e){this._popupElement=document.querySelector(e),this._handleEscClose=this._handleEscClose.bind(this)}_handleEscClose(e){"Escape"===e.key&&this.close()}open(){this._popupElement.classList.add("popup_oppened"),document.addEventListener("keyup",this._handleEscClose.bind(this))}close(){this._popupElement.classList.remove("popup_oppened"),document.removeEventListener("keyup",this._handleEscClose.bind(this))}setEventListeners(){this._popupElement.querySelector(".popup__close-button").addEventListener("click",(()=>{this.close()})),this._popupElement.addEventListener("mousedown",(e=>{e.target==e.currentTarget&&this.close()}))}}class n extends s{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popupElement.querySelector(".popup__form"),this._saving=document.querySelector(".popup__save-button")}_getInputValues(){const e=[...this._form.querySelectorAll(".popup__input")],t={};return e.forEach((e=>{t[e.name]=e.value})),t}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(this._getInputValues()),this._saving.textContent="saving..."})),super.setEventListeners()}close(){super.close(),this._form.reset(),this._saving.textContent="save"}}class o extends s{constructor(e,t){super(e),this._handleSubmit=t,this._form=this._popupElement.querySelector(".popup__form")}setEventListeners(){this._form.addEventListener("submit",(e=>{e.preventDefault(),this._handleSubmit(),this.close()})),super.setEventListeners()}close(){super.close()}}const r=document.querySelector(".elements"),i=document.querySelector(".popup__input_type_name"),a=document.querySelector(".popup__input_type_description"),l=document.querySelector(".elements__template"),c=document.querySelector(".popup_type_profile-edditor"),u=document.querySelector(".popup_type_card-editor"),p=document.querySelector(".popup_type_change-profile-picture"),h=document.querySelector(".popup_type_delete-card");let _="";const d={formSelector:".popup__form",inputSelector:".popup__input",submitButtonSelector:".popup__save-button",inactiveButtonClass:"popup__save-button_disabled",inputErrorClass:"popup__input_error"},m=new e(d,c),v=new e(d,u),y=new e(d,p),E=new e(d,h);m.enableValidation(),v.enableValidation(),y.enableValidation(),E.enableValidation();const k=new class{constructor(e){let{userNameSelector:t,userJobSelector:s}=e;this._userName=document.querySelector(t),this._userJob=document.querySelector(s)}getUserInfo(){return{name:this._userName.textContent,description:this._userJob.textContent}}setUserInfo(e){let{name:t,about:s}=e;this._userName.textContent=t,this._userJob.textContent=s}}({userNameSelector:".profile__info",userJobSelector:".profile__sub-info"}),f=new class{constructor(e,t){this._renderer=e,this._container=t}addItem(e){this._container.prepend(e)}renderItems(e){e.forEach((e=>this.addItem(this._renderer(e))))}}((e=>{const s=new t(e,l,((e,t)=>{g.open(e,t)}),(e=>{const t=new o(".popup_type_delete-card",(()=>{S.deleteCard(e).then((e=>{s.removecard()}))}));t.setEventListeners(),t.open()}),(e=>{S.putlike(e).then((e=>{console.log("liked",e)}))}),(e=>{S.deleteLike(e),console.log("deleted",e)}),_);return s.createCardElement()}),r),S=new class{constructor(e){this._url=e.baseUrl,this._token=e.token}getInitialCards(){return fetch("".concat(this._url,"/cards"),{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}addNewCard(e){return fetch("".concat(this._url,"/cards"),{method:"POST",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify(e)}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}deleteCard(e){return fetch("".concat(this._url,"/cards/").concat(e," "),{method:"DELETE",headers:{authorization:this._token}}).then((e=>e.ok?{res:e}:Promise.reject("Error: ".concat(e.status))))}putlike(e){return fetch("".concat(this._url,"/cards/likes/").concat(e," "),{method:"PUT",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((e=>e.ok?{res:e}:Promise.reject("Error: ".concat(e.status))))}deleteLike(e){return fetch("".concat(this._url,"/cards/likes/").concat(e," "),{method:"DELETE",headers:{authorization:this._token,"Content-Type":"application/json"}}).then((e=>e.ok?{res:e}:Promise.reject("Error: ".concat(e.status))))}getInitialProfile(){return fetch("".concat(this._url,"/users/me"),{headers:{authorization:this._token}}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}setInitialProfile(e){return fetch("".concat(this._url,"/users/me"),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify({name:e.name,about:e.about})}).then((e=>e.ok?e.json():Promise.reject("Error: ".concat(e.status))))}changeavatar(e){return fetch("".concat(this._url,"/users/me/avatar "),{method:"PATCH",headers:{authorization:this._token,"Content-Type":"application/json"},body:JSON.stringify(e)}).then((t=>t.ok?console.log(e):Promise.reject("Error: ".concat(t.status))))}}({baseUrl:"https://around.nomoreparties.co/v1/group-12",token:"3b0591f5-8d80-48af-bfb2-1499d5045304","Content-Type":"application/json"});S.getInitialCards().then((e=>{f.renderItems(e)}));const b=document.querySelector(".profile__add-button"),L=new n(".popup_type_card-editor",(e=>{S.addNewCard(e).then((s=>{const n=new t(s,l,(()=>{g.open(e)}),(e=>{const t=new o(".popup_type_delete-card",(()=>{S.deleteCard(e).then((e=>{n.removecard()}))}));t.setEventListeners(),t.open()}));f.addItem(n.createCardElement())}),_),L.close()}));L.setEventListeners(),b.addEventListener("click",(()=>{m.resetValidation(),L.open()}));const g=new class extends s{constructor(e){super(e),this._popupPreview=".popup__preview"}open(e,t){this._popupElement.querySelector(this._popupPreview).src=t,this._popupElement.querySelector(".popup__preview-text").textContent=e,this._popupElement.querySelector(this._popupPreview).alt=e,super.open()}}(".popup_type_preview");g.setEventListeners();let C=document.getElementById("profile-avatar");S.getInitialProfile().then((e=>{k.setUserInfo({name:e.name,about:e.about}),C.src=e.avatar,_=e._id}));const q=document.querySelector(".profile__edit-button"),w=new n(".popup_type_profile-edditor",(e=>{S.setInitialProfile(e).then((e=>{k.setUserInfo(e),w.close()}))}));w.setEventListeners(),q.addEventListener("click",(()=>{m.resetValidation(),w.open();const e=k.getUserInfo();i.value=e.name,a.value=e.description}));const I=document.querySelector(".profile__avatar"),P=new n(".popup_type_change-profile-picture",(e=>{S.changeavatar(e).then((e=>{C.src=e.avatar,P.close()}))}));P.setEventListeners(),I.addEventListener("click",(()=>{m.resetValidation(),P.open()}))}();
//# sourceMappingURL=data:application/json;charset=utf-8;base64,